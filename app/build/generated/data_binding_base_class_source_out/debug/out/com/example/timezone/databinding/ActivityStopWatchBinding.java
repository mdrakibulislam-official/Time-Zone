// Generated by view binder compiler. Do not edit!
package com.example.timezone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Chronometer;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.timezone.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStopWatchBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Chronometer Meter;

  @NonNull
  public final Button pause;

  @NonNull
  public final Button reset;

  @NonNull
  public final ImageView set;

  @NonNull
  public final Button start;

  @NonNull
  public final ImageView top;

  private ActivityStopWatchBinding(@NonNull RelativeLayout rootView, @NonNull Chronometer Meter,
      @NonNull Button pause, @NonNull Button reset, @NonNull ImageView set, @NonNull Button start,
      @NonNull ImageView top) {
    this.rootView = rootView;
    this.Meter = Meter;
    this.pause = pause;
    this.reset = reset;
    this.set = set;
    this.start = start;
    this.top = top;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStopWatchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStopWatchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_stop_watch, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStopWatchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Meter;
      Chronometer Meter = ViewBindings.findChildViewById(rootView, id);
      if (Meter == null) {
        break missingId;
      }

      id = R.id.pause;
      Button pause = ViewBindings.findChildViewById(rootView, id);
      if (pause == null) {
        break missingId;
      }

      id = R.id.reset;
      Button reset = ViewBindings.findChildViewById(rootView, id);
      if (reset == null) {
        break missingId;
      }

      id = R.id.set;
      ImageView set = ViewBindings.findChildViewById(rootView, id);
      if (set == null) {
        break missingId;
      }

      id = R.id.start;
      Button start = ViewBindings.findChildViewById(rootView, id);
      if (start == null) {
        break missingId;
      }

      id = R.id.top;
      ImageView top = ViewBindings.findChildViewById(rootView, id);
      if (top == null) {
        break missingId;
      }

      return new ActivityStopWatchBinding((RelativeLayout) rootView, Meter, pause, reset, set,
          start, top);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
